{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf400
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\f0\fs24 \cf0 ######################################\
# FILE TRANSFER                      #\
######################################\
\
# # CONFIG\
\
# hostname = "lyra.qut.edu.au"\
# password = "Dinosaur2405"\
\
# username = "n8323143"\
# port = 22\
\
# local_folder = folder_name\
# destination_folder = "/scratch/SAIVT/n8323143/smartservices/uploaded/webdemo/" + sub_folder_name\
\
\
\
# # SEND FILES\
\
# try:\
#     t = paramiko.Transport((hostname, port))\
#     t.connect(username=username, password=password)\
#     sftp = paramiko.SFTPClient.from_transport(t)\
\
#     # CREATE DIRECTORY\
#     sftp.mkdir(destination_folder)\
\
#     # COPY TXT FILE\
#     source = local_folder + "/" + new_file_name + ".txt"\
#     dest = destination_folder + "/" + new_file_name + ".txt"\
#     sftp.put(source, dest)\
\
#     # CREATE VIDEO DIRECTORY\
#     sftp.mkdir(destination_folder + "/video")\
\
#     # COPY VIDEO FILE\
#     source = local_folder + "/video/" + new_file_name\
#     dest = destination_folder + "/video/" + new_file_name\
#     sftp.put(source, dest)\
\
# except Exception as e:\
#     print "FAIL SENDING FILE"\
#     print e\
\
# finally:\
#     t.close()\
\
\
\
\
\
\
\
######################################\
# REMOTE COMMAND                     #\
######################################\
\
# # CONFIG\
\
# hostname = "lyra.qut.edu.au"\
# password = "Dinosaur2405"\
\
# username = "n8323143"\
# port = 22\
# command = "echo 'frankie is awesomee' > hello.txt"\
 \
# try:\
#     client = paramiko.SSHClient()\
#     client.load_system_host_keys()\
#     client.set_missing_host_key_policy(paramiko.WarningPolicy)\
    \
#     client.connect(hostname, port=port, username=username, password=password)\
 \
#     stdin, stdout, stderr = client.exec_command(command)\
#     print stdout.read(),\
 \
# except Exception as e:\
#     print "FAIL SENDING COMMAND"\
#     print e\
\
# finally:\
#     client.close()}